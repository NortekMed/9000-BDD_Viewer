<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer_Interface.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>